@page "/"
@inject AWJsInterop awJsInterop

<Button OnClick="TestConnection">Test Connection</Button>

<Divider />

<Button CssClass="aw-card">Click</Button>

<Button CssClass="aw-card">
    <Button OnClick="ShowDialog">Open Modal</Button>
</Button>

<Divider />

<ModalDialog @ref="_dialog" OnClose="ClosDialog">
    <BodyContent>
        <div>组件内容</div>
    </BodyContent>
</ModalDialog>

<Label ColorType="ColorType.Blue">这是一个标签</Label>

<Divider />

<Button Disabled=true>Disabled</Button>

<Button Disabled=false OnClick="async(arg) => {}">Enabled</Button>

<Divider />

<Select Options="Options" @bind-Value="@SelectedValue">
    <OptionTemplate>
        <span>📌</span>
        <span>@context</span>
    </OptionTemplate>
</Select>

<div>
    选中项： @SelectedValue
</div>

<Divider />

<Input @ref="_input" TValue="string"
Type="InputType.Text" 
@bind-Value="InputValue"
OnEnter="OnEnter"></Input>

@InputValue

<Divider />

@code {
    private ModalDialog _dialog = new ModalDialog();

    private Input<string> _input = new Input<string>();

    private bool shouldRender = true;

    public string SelectedValue { get; set; } = string.Empty;

    public string InputValue { get; set; } = string.Empty;

    private HashSet<string> Options = new HashSet<string>()
    {
        "option 1",
        "option 2",
        "option 3",
        "option 4",
        "option 5"
    };

    private Task ShowDialog(MouseEventArgs args)
    {
        _dialog.SetVisible(true);
        return Task.CompletedTask;
    }

    private Task ClosDialog()
    {
        _dialog.SetVisible(false);

        return Task.CompletedTask;
    }

    private Task OnEnter(string value)
    {
        Console.WriteLine("Key Enter");
        return Task.CompletedTask;
    }

    private async Task TestConnection(MouseEventArgs args)
    {
        await awJsInterop.TestConnection();
    }
}

